I"g<p>I was recently working on solving <a href="http://projecteuler.net/problem=64">problem 64 for project
Euler</a>Â and one of the needed
algorithms was a detection of cycles in a list. This routine works for
detecting cycles in lists of cardinality greater than 2.<br />
\</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_cycle_len</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
  <span class="n">i</span> <span class="o">=</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">N</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">N</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="n">N</span><span class="p">[</span><span class="n">j</span><span class="p">]:</span>
      <span class="k">if</span> <span class="n">k</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">k</span> <span class="o">=</span> <span class="n">j</span>
        <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span>
      <span class="k">else</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span>
          <span class="k">return</span> <span class="n">k</span>
        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">else</span><span class="p">:</span>
      <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
      <span class="n">k</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
</code></pre></div></div>
:ET