I"²<h3 id="introduction--scope">Introduction &amp; Scope</h3>

<p>The PCAP-NG file format is used to store network captured data used by
great programs like <a href="http://www.wireshark.org/download.html">Wireshark</a>.
There are several API's available for both
<a href="http://www.tcpdump.org/">Linux</a> and <a href="http://www.winpcap.org/">Windows</a>
but none that are ported to .NET. I decided to <a href="https://github.com/awalsh128/PcapngFile/">make
one</a> for my own use in
building a network traffic replay agent.</p>

<p>This code demonstrates an approach to reading in PCAP-NG files. Most of
the time I was concerned with the <a href="http://www.winpcap.org/ntar/draft/PCAP-DumpFileFormat.html#sectionepb">enhanced packet block
type</a>
since it stored the TCP payloads I wanted to replay.</p>

<h3 id="design-considerations">Design Considerations</h3>

<p>All block types derive from a common abstract class (BlockBase). This is
useful when you need a collection of blocks with different subtypes, as
in the second code segments below. Internally, all classes populate
themselves from the underlying binary reader.</p>

<p>The reader class can be used to iterate over a single block type.</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">reader</span> <span class="p">=</span> <span class="k">new</span> <span class="n">PcapngFile</span><span class="p">.</span><span class="nf">Reader</span><span class="p">(</span><span class="s">"test.pcapng"</span><span class="p">);</span>   
<span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">packet</span> <span class="k">in</span> <span class="n">reader</span><span class="p">.</span><span class="n">EnhancedPackets</span><span class="p">)</span>
<span class="p">{</span>
   <span class="kt">byte</span><span class="p">[]</span> <span class="n">payload</span> <span class="p">=</span> <span class="n">packet</span><span class="p">.</span><span class="n">Data</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>... or all of them, cast into their parent type.</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">blocks</span> <span class="p">=</span> <span class="k">new</span> <span class="n">List</span><span class="p">&lt;</span><span class="n">PcapngFile</span><span class="p">.</span><span class="n">BlockBase</span><span class="p">&gt;();</span>
<span class="k">while</span> <span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="nf">PeekStoreType</span><span class="p">()</span> <span class="p">!=</span> <span class="n">PcapngFile</span><span class="p">.</span><span class="n">BlockType</span><span class="p">.</span><span class="n">None</span><span class="p">)</span>
<span class="p">{</span>
   <span class="n">blocks</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">reader</span><span class="p">.</span><span class="nf">ReadBlock</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="the-code-and-nuget-package">The Code and NuGet Package</h3>

<p>Get access to the complete project
<a href="https://github.com/awalsh128/PcapngFile/">here</a> on my GitHub account.
If you have any suggestions or comments, feel free to leave a comment. I
also have the assembly available via NuGet
<a href="https://www.nuget.org/packages/PcapngFile/1.0.1">here</a>.</p>

<h3 id="more-reading--resources">More Reading &amp; Resources</h3>

<ul>
  <li><a href="http://www.winpcap.org/ntar/draft/PCAP-DumpFileFormat.html">WinPcap: PCAP-NG File
Format</a></li>
  <li><a href="http://wiki.wireshark.org/Development/PcapNg">Wireshark: Development -
PcapNg</a></li>
  <li><a href="http://pcapdotnet.codeplex.com">Pcap.Net: Useful for reading transport
payloads.</a></li>
</ul>
:ET